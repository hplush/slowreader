name: Clean Preview
on:
  workflow_run:
    workflows:
      - Close Preview
    types:
      - completed
permissions:
  deployments: write
  id-token: write
jobs:
  close:
    name: Close
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: slowreader-421120
      REGION: europe-west1
    steps:
      - name: Download PR number from prepare step
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: preview-id
          repository: ${{ github.repository_owner }}/${{ github.event.repository.name }}
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.PREVIEW_ARTIFACT_PAT }}
      - name: Extract PR number
        run: |
          PR_NUMBER=$(cat ./preview-id)
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
      - name: Disable deploy at GitHub
        continue-on-error: true
        uses: bobheadxi/deployments@648679e8e4915b27893bd7dbc35cb504dc915bc8 # v1.5.0
        with:
          step: delete-env
          token: ${{ secrets.PREVIEW_DEPLOYMENT_PAT }}
          env: preview-${{ env.PR_NUMBER }}
      - name: Auth Google Cloud
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
        with:
          workload_identity_provider: projects/300174498438/locations/global/workloadIdentityPools/github/providers/hplush
          service_account: github-deploy@${{ inputs.projectId }}.iam.gserviceaccount.com
      - name: Install Google Cloud
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4
      - name: Shut down Cloud Run
        run: gcloud run services update-traffic staging-server --region=${{ env.REGION }} --project=${{ env.PROJECT_ID }} --remove-tags preview-${{ env.PR_NUMBER }} --async
      - name: Delete image
        run: |
          tagged=$(gcloud artifacts docker images list $REGION-docker.pkg.dev/$PROJECT_ID/staging/server --include-tags --format="get(version)" --filter="tags = 'preview-${{ env.PR_NUMBER }}'")
          for digest in $tagged; do
            image=$REGION-docker.pkg.dev/$PROJECT_ID/staging/server@$digest
            echo "Deleting unused image: $image"
            gcloud artifacts docker images delete $image --delete-tags --quiet
          done
