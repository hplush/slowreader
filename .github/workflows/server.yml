name: Server
on:
  push:
    branches:
      - main
    paths:
      - 'server/*'
      - 'server/**/*'
      - '!server/*.md'
      - 'pnpm-lock.yaml'
      - '.github/workflows/server.yml'
      - '.github/actions/init-node/action.yml'
      - '.github/actions/deploy/action.yml'
  pull_request:
    paths:
      - 'server/*'
      - 'server/**/*'
      - '!server/*.md'
      - 'pnpm-lock.yaml'
      - '.github/workflows/server.yml'
      - '.github/actions/init-node/action.yml'
      - '.github/actions/deploy/action.yml'
jobs:
  test:
    name: Server Test
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            nodejs.org:443
            release-assets.githubusercontent.com
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Initialize Node.js
        uses: ./.github/actions/init-node
      - name: Run tests
        run: cd server && pnpm test
  build:
    name: Server Build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            nodejs.org:443
            release-assets.githubusercontent.com:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
      - name: Checkout the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Initialize Node.js
        uses: ./.github/actions/init-node
        with:
          cache: false
          install: -F server -F proxy -F api --prod
      - name: Build server
        run: cd server && node --run build:server
      - name: Create archive to keep symlinks
        run: tar -cf server.tar server/dist/
      - name: Upload server build
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: server-build-${{ github.sha }}
          retention-days: 1
          path: |
            ./server.tar
  staging:
    name: Server Staging Deploy
    needs:
      - test
      - build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      id-token: write
    concurrency:
      group: staging-server
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          allowed-endpoints: >
            9236a389bd48b984df91adc1bc924620.r2.cloudflarestorage.com:443
            api.github.com:443
            apk.cgr.dev:443
            artifactregistry.googleapis.com:443
            cgr.dev:443
            dev-server.slowreader.app:443
            dl.google.com:443
            europe-west1-docker.pkg.dev:443
            europe-west1-run.googleapis.com:443
            github.com:443
            iamcredentials.googleapis.com:443
            nodejs.org:443
            release-assets.githubusercontent.com:443
            raw.githubusercontent.com:443
            run.googleapis.com:443
            serviceusage.googleapis.com:443
            sts.googleapis.com:443
      - name: Checkout the repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Download server build from previous step
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: server-build-${{ github.sha }}
          path: ./
      - name: Extract archive to restore symlinks
        run: tar -xf server.tar
      - name: Create empty assets
        run: mkdir server/web
      - name: Deploy to Google Cloud
        uses: ./.github/actions/deploy
        with:
          projectId: slowreader-453400
          region: europe-west1
          folder: ./server/
          registry: staging/server
          service: staging-server
          shutdown: 'https://dev-server.slowreader.app/dump'
          env: ASSETS=,PROXY_ORIGIN=,DATABASE_URL=dump:/var/mnt/db/db.pglite,DEBUG=1
          # Persistent database was disable temporary to save money
          # flags: |
          #   --vpc-connector db-connector
          #   --update-secrets DATABASE_URL=staging-db-url:latest
          flags: |
            --memory 1Gi
            --add-volume name=db,type=cloud-storage,bucket=slowreader-staging-db,mount-options=uid=65532;gid=65532
            --add-volume-mount volume=db,mount-path=/var/mnt/db
