name: Server
on:
  push:
    branches:
      - main
    paths:
      - 'server/*'
      - 'server/**/*'
      - '!server/*.md'
      - 'pnpm-lock.yaml'
      - '.github/workflows/server.yml'
      - '.github/actions/init-node/action.yml'
      - '.github/actions/deploy/action.yml'
  pull_request:
    paths:
      - 'server/*'
      - 'server/**/*'
      - '!server/*.md'
      - 'pnpm-lock.yaml'
      - '.github/workflows/server.yml'
      - '.github/actions/init-node/action.yml'
      - '.github/actions/deploy/action.yml'
jobs:
  test:
    name: Server Test
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Initialize Node.js
        uses: ./.github/actions/init-node
      - name: Run tests
        run: cd server && pnpm test
  build:
    name: Server Build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Initialize Node.js
        uses: ./.github/actions/init-node
        with:
          cache: false
          install: -F server -F proxy -F api --prod
      - name: Build server
        run: cd server && node --run build:server
      - name: Create archive to keep symlinks
        run: tar -cf server.tar server/dist/
      - name: Upload server build
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: server-build-${{ github.sha }}
          retention-days: 1
          path: |
            ./server.tar
  staging:
    name: Server Staging Deploy
    needs:
      - test
      - build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      id-token: write
    concurrency:
      group: staging-server
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download server build from previous step
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: server-build-${{ github.sha }}
          path: ./
      - name: Extract archive to restore symlinks
        run: tar -xf server.tar
      - name: Create empty assets
        run: mkdir server/web
      - name: Deploy to Google Cloud
        uses: ./.github/actions/deploy
        with:
          projectId: slowreader-453400
          region: europe-west1
          folder: ./server/
          registry: staging/server
          service: staging-server
          env: ASSETS=,PROXY_ORIGIN=,DATABASE_URL=dump:/var/mnt/db/db.pglite
          # Persistent database was disable temporary to save money
          # flags: |
          #   --vpc-connector db-connector
          #   --update-secrets DATABASE_URL=staging-db-url:latest
          flags: |
            --add-volume name=db,type=cloud-storage,bucket=slowreader-staging-db
            --add-volume-mount volume=db,mount-path=/var/mnt/db
